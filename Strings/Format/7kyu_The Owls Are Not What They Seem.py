"""
To pass the series of gates guarded by the owls, Kenneth needs to present them
each with a highly realistic portrait of one. Unfortunately, he is absolutely 
rubbish at drawing, and needs some code to return a brand new portrait 
with a moment's notice.

All owl heads look like this:

''0v0''
Such beautiful eyes! However, they differ in their plumage, 
which is always symmetrical, eg.:

   VVHVAV''0v0''VAVHVV
or

YYAYAH8XH''0v0''HX8HAYAYY
So Kenneth needs a method that will take a garble of text generated by mashing 
at his keyboard (numbers and letters, but he knows how to avoid punctuation etc.) 
for a bit and give him a symmetrical owl with a lovely little face, 
with a truly symmetrical plumage made of uppercase letters and numbers.

To be clear, the acceptable characters for the plumage are 
['8','W','T','Y','U','I','O','A','H','X','V','M']

"""

def owl_pic(text):
    text = text.upper()
    suitable = ['8','W','T','Y','U','I','O','A','H','X','V','M']
    plumage = filter(lambda x: x in suitable, text)
    plumage = ''.join(plumage)
    return plumage + "''0v0''" + plumage[::-1]



import re

def owl_pic(text):
	text = text.upper()
	suitable = '[^ 8,W,T,Y,U,I,O,A,H,X,V,M]'
    plumage = re.sub(suitable, '', text)
    return plumage + "''0v0''" + plumage[::-1]




print(owl_pic("kuawd6r8q27y87t93r76352475437"))















test.assert_equals(owl_pic('xwe'),"XW''0v0''WX")
test.assert_equals(owl_pic("kuawd6r8q27y87t93r76352475437"), "UAW8Y8T''0v0''T8Y8WAU")
test.assert_equals(owl_pic("t6ggggggggWw"), "TWW''0v0''WWT")
test.assert_equals(owl_pic('xweWXo'),"XWWXO''0v0''OXWWX")

from random import randint

def op(text):
    values = '8WTYUIOAHXMV'
    plumage = ''
    for i in text:
        if i.upper() in values:
            plumage += i.upper()
    return plumage + "''0v0''" + plumage[::-1]

test.describe("Random Tests")

pos = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'

for x in range(50):
    length = randint(0,50)
    text = ''
    while len(text) < length:
        text += pos[randint(0,len(pos)-1)]
    test.assert_equals(owl_pic(text),op(text))